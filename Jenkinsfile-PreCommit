pipeline {
    agent {label 'docker'}

    tools {
        // Install Maven
        maven 'maven-3.9.1'
    }

    environment {
        // CI repo dir name
        CI_REPO="CI-REPOSITORY"
        // releases repo URL
        NEXUS_RELEASES=credentials('nexus-mvn-releases')
        // snapshots repo URL
        NEXUS_SNAPSHOTS=credentials('nexus-mvn-snapshots')
        // NEXUS_USER_USR NEXUS_USER_PSW
        NEXUS_USER=credentials('nexus-user')
        // nexus maven central repo
        NEXUS_CENTRAL=credentials('nexus-mvn-central')
    }
    
    options { 
        skipDefaultCheckout() 
    }

    stages {
        stage('checkout SCM') {
            steps {
                // checkout app repo
                checkout scm
                // checkout CI repo to <workdir>/"${env.CI_REPO_DIR}"
                checkout scmGit(
                    branches: [[name: 'main']], 
                    extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${env.CI_REPO}"]], 
                    // CI repo URL from var set by emote Jenkinsfile Provider plugin
                    userRemoteConfigs: [[url: "${env.RJPP_SCM_URL}"]]
                )
                // set custom build name
                script {
                    def pom = readMavenPom()
                    env.VERSION = pom.getVersion()
                    currentBuild.displayName = "#" + currentBuild.number + " ${env.VERSION}"
                }
            }
        }
        stage('test app') {
            steps {
                echo "Building..."
                sh "mvn --batch-mode -s ${env.CI_REPO}/mvn-settings.xml clean test"
            }
        }
    }
}
